#!/bin/sh

[ "${ACTION}" = "released" -o "${ACTION}" = "timeout" ] || exit 21

. /lib/functions.sh

logger "$BUTTON pressed for $SEEN seconds"

# factory reset
if [ "$SEEN" -gt 20 ]
then
	[ -f /tmp/.factory_reset ] && return
	echo timer > /sys/class/leds/mediatek\:orange\:wifi/trigger
	echo 100 > /sys/class/leds/mediatek\:orange\:wifi/delay_on
	echo 100 > /sys/class/leds/mediatek\:orange\:wifi/delay_off
	touch /tmp/.factory_reset
	echo "FACTORY RESET" > /dev/console
	jffs2reset -y
	sync
	reboot
# wifi reset (back to ap mode)
elif [ "$SEEN" -gt 5 ]
then
	linkit_mode="$(uci get wireless.radio0.linkit_mode)"
	if [ ! "$linkit_mode" = "ap" ]; then
		echo none > /sys/class/leds/mediatek\:orange\:wifi/trigger
		echo 1 > /sys/class/leds/mediatek\:orange\:wifi/brightness
		sleep 1
		echo "START WIFI AP" > /dev/console
		/usr/bin/wifi_mode ap > /dev/console 2>&1
	else
		echo none > /sys/class/leds/mediatek\:orange\:wifi/trigger
                echo 1 > /sys/class/leds/mediatek\:orange\:wifi/brightness
                sleep 1
                echo "START WIFI STA" > /dev/console
                /usr/bin/wifi_mode sta
                sleep 2

		reboot
	fi
# print wifi information (show mac under ap mode / ip under sta mode
elif [ "$SEEN" -lt 1 ]
then
	yunbridge_disabled="$(uci get yunbridge.config.disabled)"
	linkit_mode="$(uci get wireless.radio0.linkit_mode)"
	uart0_state="$(mt7688_pinmux get 2>&1 | grep uart0 | awk '{print $4}')"
	# pin is NOT in uart mode
	if [ "$uart0_state" = "uart" ]; then
		mt7688_pinmux set uart0 uart
	fi

	if [ "$yunbridge_disabled" = 1 ]; then
		# ap mode. show mac
		if [ "$linkit_mode" = "ap" ]; then
			ap_mac="$(iwinfo ra0 info | grep Access | awk '{print $3}')"
			echo "AP MAC address: $ap_mac" > /dev/ttyS0
		# sta mode. show ip
		else
			dev_ip="$(ifconfig apcli0 | grep "inet addr" | awk '{print $2}' | awk -F":" '{print $2}')"
			echo "Device IP address: $dev_ip" > /dev/ttyS0
			echo "button wps!" > /dev/console

			routeIp="$(route | grep default | awk -F " " '{print $2}')"
                        echo ${routeIp} > /dev/console
                        ping -c 1 -w 2 ${routeIp}

                        if [ "${?}" == "0" ];then
                                echo "Have connected router!"  > /dev/console
                                echo "exit wps!"  > /dev/console
                                exit
                        fi


			if [ "${dev_ip}" != "" ];then
                                ifconfig apcli0 0.0.0.0
                                uci set wireless.sta.ssid=UplinkAp
                                uci set wireless.sta.key=SecretKey
                                uci set wireless.sta.encryption=psk2
                                uci set wireless.sta.disabled=0
                                uci commit
                                wifi_mode sta
                                sleep 20
                        else
                                ifconfig apcli0 up
                        fi

                        ifconfig apcli0 up
                        route add -net 239.255.255.250 netmask 255.255.255.255 apcli0
                        #wscd -w /etc/xml/ -m 3 -d 3 -i apcli0 -D
                        #sleep 1

                        iwpriv apcli0 set WscConfMode=1
                        iwpriv apcli0 set  WscMode=2
                        iwpriv apcli0 set WscGetConf=1
			
			ledOn="0"
			new_ip="$(ifconfig apcli0 | grep "inet addr" | awk '{print $2}' | awk -F":" '{print $2}')"
                        while [ ! $new_ip ];do
                                new_ip="$(ifconfig apcli0 | grep "inet addr" | awk '{print $2}' | awk -F":" '{print $2}')"

				#if [ "${ledOn}" == "0" ];then                                                    
                                #        gpio_app led on                                                          
                                #        ledOn="1"                                                                
                                #else                                                                             
                                #        gpio_app led off                                                         
                                #        ledOn="0"                                                                
                                #fi                                                                               
                                sleep 1    
                        done

			//net is connectted!
			var=0
			while [ $var -le 10 ];do

        			cnt=0
       				while [ $cnt -le 80 ];do
                			cnt=`expr $cnt + 1`
        			done

        			var=`expr $var + 1`
        			echo $var


				if [ "${ledOn}" == "0" ];then                                                    
                                        gpio_app led on                                                          
                                        ledOn="1"                                                                
                                else                                                                             
                                        gpio_app led off                                                         
                                        ledOn="0"                                                                
                                fi    
			done

			gpio_app led on


                        echo ${new_ip} > /dev/console

                        ssid="$(iwpriv apcli0 stat | grep SSID | awk -F " " '{print $NF}')"
                        password="$(iwpriv apcli0 stat | grep Key | grep -v KeyIndex | awk -F " " '{print $NF}')"

                        echo ${ssid} > /dev/console
                        echo ${password} > /dev/console

                        uci set wireless.sta.ssid=${ssid}
                        uci set wireless.sta.key=${password}
                        uci set wireless.sta.disabled=0
                        uci commit

		fi
	fi

	# pin is NOT in uart mode. restore to gpio mode
	if [ "$uart0_state" = "uart" ]; then
		mt7688_pinmux set uart0 gpio
	fi
fi

return 0
